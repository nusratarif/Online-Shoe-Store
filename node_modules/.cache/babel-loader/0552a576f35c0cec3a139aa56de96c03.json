{"ast":null,"code":"var _jsxFileName = \"/home/nusrat-arif/Nusrat Jahan CNC/REACT/React Assignments/React Router v6/shoe-store/src/Components/Cart.js\";\nimport React, { useContext, useState } from 'react';\nimport { CartContext } from '../../state_management/CartContext';\nimport { Grid, Paper } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SnackbarAlert from '../widgets/SnackbarAlert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useNavigate } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '0 auto 0 auto'\n  },\n  buttonGotoProducts: {\n    \"&:hover\": {\n      backgroundColor: '#ffffff',\n      color: '#b32727',\n      border: '1px solid #b32727'\n    },\n    margin: theme.spacing(1),\n    backgroundColor: '#b32727',\n    fontSize: 14,\n    textTransform: 'none',\n    padding: '10px 40px'\n  },\n  cartGridLeft: {},\n  cartPaper: {\n    marginBottom: 30,\n    padding: '5px 0 15px 0'\n  },\n  cartProductInfo: {\n    padding: '0 25px'\n  },\n  cartProductImage: {\n    padding: '8px 7px 1px 7px'\n  },\n  cartProductName: {\n    \"&>span\": {\n      float: 'right',\n      fontSize: 24\n    },\n    paddingTop: 10,\n    fontSize: 17\n  },\n  cartPriceTagRight: {},\n  cartseletedSizeLabel: {\n    fontSize: 14\n  },\n  cartseletedSizeDropdown: {\n    fontSize: 14,\n    width: 100\n  },\n  cartSizeSection: {\n    float: 'left',\n    width: 100,\n    marginRight: 15\n  },\n  buttonRemove: {\n    \"&:hover\": {\n      backgroundColor: '#ffffff',\n      color: '#b32727',\n      border: 'none',\n      boxShadow: 'none',\n      textDecoration: 'underline'\n    },\n    \"& span\": {\n      marginRight: 4\n    },\n    backgroundColor: '#ffffff',\n    marginTop: 15,\n    textTransform: 'none',\n    color: '#b32727',\n    border: 'none',\n    boxShadow: 'none',\n    padding: 0\n  },\n  cartSummaryHeading: {\n    marginTop: 0\n  },\n  summarySubTotals: {\n    \"& p\": {\n      fontSize: 15\n    }\n  },\n  summaryPriceRight: {\n    float: 'right'\n  },\n  summaryTotal: {\n    fontSize: 16,\n    borderTop: '1px solid #cccccc',\n    borderBottom: '1px solid #cccccc',\n    marginBottom: 25,\n    \"& p\": {\n      fontSize: 18\n    }\n  },\n  summaryTotalPriceRight: {\n    float: 'right',\n    fontWeight: 600\n  },\n  checkoutButtonArea: {\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  checkoutButton: {\n    \"&:hover\": {\n      backgroundColor: '#ffffff',\n      color: '#b32727',\n      border: '1px solid #b32727'\n    },\n    margin: theme.spacing(1),\n    backgroundColor: '#b32727',\n    fontSize: 14,\n    textTransform: 'none',\n    // width: '100%',\n    padding: '10px 40px',\n    justifyContent: 'center',\n    color: '#ffffff'\n  }\n}));\n\nfunction Cart() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const {\n    cart,\n    deleteFromCart,\n    updateFromCart\n  } = useContext(CartContext);\n  const [isCartUpdated, setIsCartUpdate] = useState(false);\n  const [addToCartStatus, setAddToCartStatus] = useState(false);\n  console.log(\"loadedCart\", cart);\n\n  const handleSizeChange = (event, productId) => {\n    let cartObj = cart.filter(x => x.id === productId)[0];\n    cartObj.selectedSize = Number(event.target.value);\n    updateFromCart(cartObj);\n    setIsCartUpdate(true);\n  };\n\n  const handleQuantityChange = (event, productId) => {\n    let cartObj = cart.filter(x => x.id === productId)[0];\n    cartObj.quantity = Number(event.target.value);\n    updateFromCart(cartObj);\n    setIsCartUpdate(true);\n  };\n\n  const deletProductFromCart = productId => {\n    setAddToCartStatus(true);\n    deleteFromCart(productId);\n  };\n\n  if (isCartUpdated) setIsCartUpdate(false);\n  let subtotal = 0;\n  let shippingCost = 0;\n  let totalAmount = 0;\n\n  for (let i = 0; i < cart.length; i++) {\n    subtotal += cart[i].price * cart[i].quantity;\n  }\n\n  totalAmount = subtotal + shippingCost;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, cart.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, cart.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Paper, {\n      elevation: 3,\n      key: index,\n      className: classes.cartPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cartProductImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.images[0],\n      style: {\n        width: '100%'\n      },\n      alt: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cartProductInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.cartProductName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 57\n      }\n    }, item.name, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 108\n      }\n    }, \"$\", item.price)), isCartUpdated ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cartSizeSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 67\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      className: classes.cartseletedSizeLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 69\n      }\n    }, \"Selected Size\"), /*#__PURE__*/React.createElement(Select, {\n      className: classes.cartseletedSizeDropdown,\n      native: true,\n      value: item.selectedSize,\n      onChange: e => handleSizeChange(e, item.id),\n      inputProps: {\n        name: 'size',\n        id: 'age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 69\n      }\n    }, item.sizes.map((item, ind) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item,\n        key: ind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 85\n        }\n      }, item);\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cartSizeSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 67\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      className: classes.cartseletedSizeLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 69\n      }\n    }, \"Selected Size\"), /*#__PURE__*/React.createElement(Select, {\n      className: classes.cartseletedSizeDropdown,\n      native: true,\n      value: item.selectedSize,\n      onChange: e => handleSizeChange(e, item.id),\n      inputProps: {\n        name: 'size',\n        id: 'age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 69\n      }\n    }, item.sizes.map((item, ind) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: item,\n        key: ind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 85\n        }\n      }, item);\n    }))), isCartUpdated ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 67\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      className: classes.cartseletedSizeLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 69\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(Select, {\n      className: classes.cartseletedSizeDropdown,\n      native: true,\n      value: item.quantity,\n      onChange: e => handleQuantityChange(e, item.id),\n      inputProps: {\n        name: 'quantity',\n        id: 'age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 73\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 73\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 73\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 73\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 73\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 73\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 73\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 73\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 73\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 73\n      }\n    }, \"10\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 67\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      className: classes.cartseletedSizeLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 69\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(Select, {\n      className: classes.cartseletedSizeDropdown,\n      native: true,\n      value: item.quantity,\n      onChange: e => handleQuantityChange(e, item.id),\n      inputProps: {\n        name: 'quantity',\n        id: 'age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 73\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 73\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 73\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 73\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 73\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 73\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 73\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 73\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 73\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 73\n      }\n    }, \"10\"))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.buttonRemove,\n      startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 72\n        }\n      }),\n      onClick: () => deletProductFromCart(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 57\n      }\n    }, \"Remove\")))));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.cartSummaryHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summarySubTotals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, \"Subtotal: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.summaryPriceRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 46\n    }\n  }, \"$\", subtotal.toFixed(2))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, \"Delivery charges: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.summaryPriceRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 54\n    }\n  }, \"$\", shippingCost.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, \"Total: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.summaryTotalPriceRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 43\n    }\n  }, \"$\", totalAmount.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.checkoutButtonArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.checkoutButton // startIcon={<AddShoppingCartIcon />}\n    ,\n    onClick: () => navigate('/checkout'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, \"Checkout\")))) : /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      textAlign: 'center',\n      padding: '50px 0'\n    },\n    elevation: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, \"Your cart is empty!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }\n  }, \"Please add some products into the cart.\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.buttonGotoProducts,\n    onClick: () => navigate('/products'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, \"Go to Products Page\")), addToCartStatus ? /*#__PURE__*/React.createElement(SnackbarAlert, {\n    status: addToCartStatus,\n    updateStatus: setAddToCartStatus,\n    msgType: 'success',\n    msg: 'Product is removed from the cart!',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}\n\nexport default Cart;","map":{"version":3,"sources":["/home/nusrat-arif/Nusrat Jahan CNC/REACT/React Assignments/React Router v6/shoe-store/src/Components/Cart.js"],"names":["React","useContext","useState","CartContext","Grid","Paper","Button","Select","InputLabel","DeleteIcon","SnackbarAlert","makeStyles","useNavigate","useStyles","theme","root","margin","buttonGotoProducts","backgroundColor","color","border","spacing","fontSize","textTransform","padding","cartGridLeft","cartPaper","marginBottom","cartProductInfo","cartProductImage","cartProductName","float","paddingTop","cartPriceTagRight","cartseletedSizeLabel","cartseletedSizeDropdown","width","cartSizeSection","marginRight","buttonRemove","boxShadow","textDecoration","marginTop","cartSummaryHeading","summarySubTotals","summaryPriceRight","summaryTotal","borderTop","borderBottom","summaryTotalPriceRight","fontWeight","checkoutButtonArea","justifyContent","textAlign","checkoutButton","Cart","classes","navigate","cart","deleteFromCart","updateFromCart","isCartUpdated","setIsCartUpdate","addToCartStatus","setAddToCartStatus","console","log","handleSizeChange","event","productId","cartObj","filter","x","id","selectedSize","Number","target","value","handleQuantityChange","quantity","deletProductFromCart","subtotal","shippingCost","totalAmount","i","length","price","map","item","index","images","name","e","sizes","ind","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { CartContext } from '../../state_management/CartContext';\n\nimport { Grid, Paper } from '@material-ui/core'\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SnackbarAlert from '../widgets/SnackbarAlert';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '0 auto 0 auto'\n    },\n    buttonGotoProducts: {\n        \"&:hover\": {\n            backgroundColor: '#ffffff',\n            color: '#b32727',\n            border: '1px solid #b32727'\n        },\n        margin: theme.spacing(1),\n        backgroundColor: '#b32727',\n        fontSize: 14,\n        textTransform: 'none',\n        padding: '10px 40px'\n    },\n    cartGridLeft: {\n\n    },\n    cartPaper: {\n        marginBottom: 30,\n        padding: '5px 0 15px 0'\n    },\n    cartProductInfo: {\n        padding: '0 25px'\n    },\n    cartProductImage: {\n        padding: '8px 7px 1px 7px'\n    },\n    cartProductName: {\n        \"&>span\": {\n            float: 'right',\n            fontSize: 24\n        },\n        paddingTop: 10,\n        fontSize: 17\n    },\n    cartPriceTagRight: {\n\n    },\n    cartseletedSizeLabel: {\n        fontSize: 14\n    },\n    cartseletedSizeDropdown: {\n        fontSize: 14,\n        width: 100\n    },\n    cartSizeSection: {\n        float: 'left',\n        width: 100,\n        marginRight: 15\n    },\n    buttonRemove: {\n        \"&:hover\": {\n            backgroundColor: '#ffffff',\n            color: '#b32727',\n            border: 'none',\n            boxShadow: 'none',\n            textDecoration: 'underline'\n        },\n        \"& span\": {\n            marginRight: 4\n        },\n        backgroundColor: '#ffffff',\n        marginTop: 15,\n        textTransform: 'none',\n        color: '#b32727',\n        border: 'none',\n        boxShadow: 'none',\n        padding: 0\n    },\n    cartSummaryHeading: {\n        marginTop: 0\n    },\n    summarySubTotals: {\n        \"& p\": {\n            fontSize: 15\n        }\n    },\n    summaryPriceRight: {\n        float: 'right'\n    },\n    summaryTotal: {\n        fontSize: 16,\n        borderTop: '1px solid #cccccc',\n        borderBottom: '1px solid #cccccc',\n        marginBottom: 25,\n        \"& p\": {\n            fontSize: 18\n        }\n    },\n    summaryTotalPriceRight: {\n        float: 'right',\n        fontWeight: 600,\n    },\n    checkoutButtonArea: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    checkoutButton: {\n        \"&:hover\": {\n            backgroundColor: '#ffffff',\n            color: '#b32727',\n            border: '1px solid #b32727'\n        },\n        margin: theme.spacing(1),\n        backgroundColor: '#b32727',\n        fontSize: 14,\n        textTransform: 'none',\n        // width: '100%',\n        padding: '10px 40px',\n        justifyContent: 'center',\n        color: '#ffffff',        \n\n    }\n\n}));\n\nfunction Cart() {\n\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    const { cart, deleteFromCart, updateFromCart } = useContext(CartContext);\n\n    const [isCartUpdated, setIsCartUpdate] = useState(false);\n    const [addToCartStatus, setAddToCartStatus] = useState(false);\n\n\n    console.log(\"loadedCart\", cart);\n    const handleSizeChange = (event, productId) => {\n        let cartObj = cart.filter(x => x.id === productId)[0];\n        cartObj.selectedSize = Number(event.target.value);\n        updateFromCart(cartObj);\n        setIsCartUpdate(true);\n    }\n\n    const handleQuantityChange = (event, productId) => {\n        let cartObj = cart.filter(x => x.id === productId)[0];\n        cartObj.quantity = Number(event.target.value);\n        updateFromCart(cartObj);\n        setIsCartUpdate(true);\n    }\n\n    const deletProductFromCart = (productId) => {\n        setAddToCartStatus(true);\n        deleteFromCart(productId);        \n    }\n\n    if (isCartUpdated)\n        setIsCartUpdate(false)\n\n\n    let subtotal = 0;\n    let shippingCost = 0;\n    let totalAmount = 0;        \n    \n    for(let i = 0; i < cart.length; i++){\n        subtotal += cart[i].price * cart[i].quantity;\n    }\n    totalAmount = subtotal + shippingCost;\n\n    return (\n        <div>\n            {\n                cart.length > 0\n                    ? <Grid container spacing={3}>\n                        <Grid item xs={12} sm={12} md={8}>\n                            {\n                                cart.map((item, index) => {\n                                    return (\n                                        <Paper elevation={3} key={index} className={classes.cartPaper}>\n                                            <Grid container >\n                                                <Grid item xs={2}>\n                                                    <div className={classes.cartProductImage}>\n                                                        <img src={item.images[0]} style={{ width: '100%' }} alt={item.name}/>\n                                                    </div>\n                                                </Grid>\n                                                <Grid item xs={10}>\n                                                    <div className={classes.cartProductInfo}>\n                                                        <h3 className={classes.cartProductName}>{item.name}<span>${item.price}</span></h3>\n                                                        {\n                                                            isCartUpdated\n                                                                ? <div className={classes.cartSizeSection}>\n                                                                    <InputLabel htmlFor=\"age-native-simple\" className={classes.cartseletedSizeLabel}>Selected Size</InputLabel>\n                                                                    <Select\n                                                                        className={classes.cartseletedSizeDropdown}\n                                                                        native\n                                                                        value={item.selectedSize}\n                                                                        onChange={(e) => handleSizeChange(e, item.id)}\n                                                                        inputProps={{\n                                                                            name: 'size',\n                                                                            id: 'age-native-simple',\n                                                                        }}\n                                                                    >\n                                                                        {\n                                                                            item.sizes.map((item, ind) => {\n                                                                                return (\n                                                                                    <option value={item} key={ind}>{item}</option>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </Select>\n                                                                </div>\n                                                                : <div className={classes.cartSizeSection}>\n                                                                    <InputLabel htmlFor=\"age-native-simple\" className={classes.cartseletedSizeLabel}>Selected Size</InputLabel>\n                                                                    <Select\n                                                                        className={classes.cartseletedSizeDropdown}\n                                                                        native\n                                                                        value={item.selectedSize}\n                                                                        onChange={(e) => handleSizeChange(e, item.id)}\n                                                                        inputProps={{\n                                                                            name: 'size',\n                                                                            id: 'age-native-simple',\n                                                                        }}\n                                                                    >\n                                                                        {\n                                                                            item.sizes.map((item, ind) => {\n                                                                                return (\n                                                                                    <option value={item} key={ind}>{item}</option>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </Select>\n                                                                </div>\n                                                        }\n                                                        {\n                                                            isCartUpdated\n                                                                ? <div>\n                                                                    <InputLabel htmlFor=\"age-native-simple\" className={classes.cartseletedSizeLabel}>Quantity</InputLabel>\n                                                                    <Select\n                                                                        className={classes.cartseletedSizeDropdown}\n                                                                        native\n                                                                        value={item.quantity}\n                                                                        onChange={(e) => handleQuantityChange(e, item.id)}\n                                                                        inputProps={{\n                                                                            name: 'quantity',\n                                                                            id: 'age-native-simple',\n                                                                        }}\n                                                                    >\n                                                                        <option value={1}>1</option>\n                                                                        <option value={2}>2</option>\n                                                                        <option value={3}>3</option>\n                                                                        <option value={4}>4</option>\n                                                                        <option value={5}>5</option>\n                                                                        <option value={6}>6</option>\n                                                                        <option value={7}>7</option>\n                                                                        <option value={8}>8</option>\n                                                                        <option value={9}>9</option>\n                                                                        <option value={10}>10</option>\n\n                                                                    </Select>\n                                                                </div>\n                                                                : <div>\n                                                                    <InputLabel htmlFor=\"age-native-simple\" className={classes.cartseletedSizeLabel}>Quantity</InputLabel>\n                                                                    <Select\n                                                                        className={classes.cartseletedSizeDropdown}\n                                                                        native\n                                                                        value={item.quantity}\n                                                                        onChange={(e) => handleQuantityChange(e, item.id)}\n                                                                        inputProps={{\n                                                                            name: 'quantity',\n                                                                            id: 'age-native-simple',\n                                                                        }}\n                                                                    >\n                                                                        <option value={1}>1</option>\n                                                                        <option value={2}>2</option>\n                                                                        <option value={3}>3</option>\n                                                                        <option value={4}>4</option>\n                                                                        <option value={5}>5</option>\n                                                                        <option value={6}>6</option>\n                                                                        <option value={7}>7</option>\n                                                                        <option value={8}>8</option>\n                                                                        <option value={9}>9</option>\n                                                                        <option value={10}>10</option>\n\n                                                                    </Select>\n                                                                </div>\n                                                        }\n\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                            className={classes.buttonRemove}\n                                                            startIcon={<DeleteIcon />}\n                                                            onClick={() => deletProductFromCart(item.id)}\n                                                        >\n                                                            Remove\n                                                        </Button>\n                                                    </div>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n                                    )\n                                })\n                            }\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={4}>\n                            <h2 className={classes.cartSummaryHeading}>Summary</h2>\n                            <div className={classes.summarySubTotals}>\n                                <p>Subtotal: <span className={classes.summaryPriceRight}>${subtotal.toFixed(2)}</span></p>\n                                <p>Delivery charges: <span className={classes.summaryPriceRight}>${shippingCost.toFixed(2)}</span></p>\n                            </div>\n                            <div className={classes.summaryTotal}>\n                                <p>Total: <span className={classes.summaryTotalPriceRight}>${totalAmount.toFixed(2)}</span></p>\n                            </div>\n                            <div className={classes.checkoutButtonArea}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.checkoutButton}\n                                // startIcon={<AddShoppingCartIcon />}\n                                    onClick={() => navigate('/checkout')}\n                                >\n                                    Checkout\n                        </Button>\n                            </div>\n\n                        </Grid>\n                    </Grid>\n                    : <Paper style={{ textAlign: 'center', padding: '50px 0' }} elevation={2}>\n                        <h1>Your cart is empty!</h1>\n                        <p>Please add some products into the cart.</p>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.buttonGotoProducts}\n                            onClick={() => navigate('/products')}\n                        >\n                            Go to Products Page\n                        </Button>\n                    </Paper>\n            }\n            {\n                addToCartStatus\n                    ? <SnackbarAlert status={addToCartStatus} updateStatus={setAddToCartStatus} msgType={'success'} msg={'Product is removed from the cart!'}/>\n                    : <></>\n            }\n        </div>\n    )\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}