{"ast":null,"code":"export const CartReducer = (state, action) => {\n  const {\n    shoppingCart,\n    totalPrice,\n    qty\n  } = state;\n  let product;\n  let index;\n  let updatedPrice;\n  let updatedQty;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const check = shoppingCart.find(product => product.id === action.id);\n\n      if (check) {\n        return state;\n      } else {\n        product = action.product;\n        product['qty'] = 1;\n        updatedQty = qty + 1;\n        updatedPrice = totalPrice + product.price;\n        return {\n          shoppingCart: [product, ...shoppingCart],\n          totalPrice: updatedPrice,\n          qty: updatedQty\n        };\n      }\n\n      break;\n\n    case 'INCREAMENT':\n      product = action.cart;\n      product.qty = product.qty + 1;\n      updatedPrice = totalPrice + product.price;\n      updatedQty = qty + product.qty;\n      index = shoppingCart.findIndex(cart => cart.id === action.id);\n      shoppingCart[index] = product;\n      return {\n        shoppingCart: [...shoppingCart],\n        totalPrice: updatedPrice,\n        qty: updatedQty\n      };\n      break;\n\n    case 'DECREAMENT':\n      product = action.cart;\n\n      if (product.qty > 1) {\n        product.qty = product.qty - 1;\n        updatedPrice = totalPrice - product.price;\n        updatedQty = qty - product.qty;\n        index = shoppingCart.findIndex(cart => cart.id === action.id);\n        shoppingCart[index] = product;\n        return {\n          shoppingCart: [...shoppingCart],\n          totalPrice: updatedPrice,\n          qty: updatedQty\n        };\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/nusrat-arif/Nusrat Jahan CNC/REACT/React Assignments/React Router v6/shoe-store/src/Global/CartReducer.js"],"names":["CartReducer","state","action","shoppingCart","totalPrice","qty","product","index","updatedPrice","updatedQty","type","check","find","id","price","cart","findIndex"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE1C,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAAiCJ,KAAvC;AACA,MAAIK,OAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,UAAJ;;AACA,UAAOP,MAAM,CAACQ,IAAd;AACI,SAAK,aAAL;AACI,YAAMC,KAAK,GAAGR,YAAY,CAACS,IAAb,CAAkBN,OAAO,IAAIA,OAAO,CAACO,EAAR,KAAeX,MAAM,CAACW,EAAnD,CAAd;;AACA,UAAGF,KAAH,EAAS;AACL,eAAOV,KAAP;AACH,OAFD,MAEO;AACHK,QAAAA,OAAO,GAAGJ,MAAM,CAACI,OAAjB;AACAA,QAAAA,OAAO,CAAC,KAAD,CAAP,GAAiB,CAAjB;AACAG,QAAAA,UAAU,GAAGJ,GAAG,GAAG,CAAnB;AACAG,QAAAA,YAAY,GAAGJ,UAAU,GAAGE,OAAO,CAACQ,KAApC;AACA,eAAM;AAACX,UAAAA,YAAY,EAAE,CAACG,OAAD,EAAU,GAAGH,YAAb,CAAf;AACNC,UAAAA,UAAU,EAAEI,YADN;AACoBH,UAAAA,GAAG,EAAEI;AADzB,SAAN;AAEH;;AACD;;AAEA,SAAK,YAAL;AACIH,MAAAA,OAAO,GAAGJ,MAAM,CAACa,IAAjB;AACAT,MAAAA,OAAO,CAACD,GAAR,GAAcC,OAAO,CAACD,GAAR,GAAc,CAA5B;AACAG,MAAAA,YAAY,GAAGJ,UAAU,GAAGE,OAAO,CAACQ,KAApC;AACAL,MAAAA,UAAU,GAAGJ,GAAG,GAAGC,OAAO,CAACD,GAA3B;AACAE,MAAAA,KAAK,GAAGJ,YAAY,CAACa,SAAb,CAAuBD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYX,MAAM,CAACW,EAAlD,CAAR;AACAV,MAAAA,YAAY,CAACI,KAAD,CAAZ,GAAsBD,OAAtB;AACA,aAAM;AAACH,QAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,CAAf;AAAkCC,QAAAA,UAAU,EAAEI,YAA9C;AACNH,QAAAA,GAAG,EAAEI;AADC,OAAN;AAGA;;AAGJ,SAAK,YAAL;AACIH,MAAAA,OAAO,GAAGJ,MAAM,CAACa,IAAjB;;AACA,UAAGT,OAAO,CAACD,GAAR,GAAc,CAAjB,EAAmB;AAEfC,QAAAA,OAAO,CAACD,GAAR,GAAcC,OAAO,CAACD,GAAR,GAAc,CAA5B;AACAG,QAAAA,YAAY,GAAGJ,UAAU,GAAGE,OAAO,CAACQ,KAApC;AACAL,QAAAA,UAAU,GAAGJ,GAAG,GAAGC,OAAO,CAACD,GAA3B;AACAE,QAAAA,KAAK,GAAGJ,YAAY,CAACa,SAAb,CAAuBD,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYX,MAAM,CAACW,EAAlD,CAAR;AACAV,QAAAA,YAAY,CAACI,KAAD,CAAZ,GAAsBD,OAAtB;AACA,eAAM;AAACH,UAAAA,YAAY,EAAE,CAAC,GAAGA,YAAJ,CAAf;AAAkCC,UAAAA,UAAU,EAAEI,YAA9C;AACNH,UAAAA,GAAG,EAAEI;AADC,SAAN;AAGH,OAVD,MAUO;AACH,eAAOR,KAAP;AACH;;AAML;AACI,aAAOA,KAAP;AAjDZ;AAmDH,CA1DM","sourcesContent":["export const CartReducer = (state, action) => {\n   \n    const {shoppingCart, totalPrice, qty} =state;\n    let product;\n    let index;\n    let updatedPrice;\n    let updatedQty;\n    switch(action.type){\n        case 'ADD_TO_CART':\n            const check = shoppingCart.find(product => product.id === action.id);\n            if(check){\n                return state;\n            } else {\n                product = action.product;\n                product['qty'] = 1;\n                updatedQty = qty + 1;\n                updatedPrice = totalPrice + product.price;\n                return{shoppingCart: [product, ...shoppingCart],\n                totalPrice: updatedPrice, qty: updatedQty}\n            }\n            break;\n\n            case 'INCREAMENT':\n                product = action.cart;\n                product.qty = product.qty + 1;\n                updatedPrice = totalPrice + product.price;\n                updatedQty = qty + product.qty;\n                index = shoppingCart.findIndex(cart => cart.id === action.id);\n                shoppingCart[index] = product;\n                return{shoppingCart: [...shoppingCart], totalPrice: updatedPrice,\n                qty: updatedQty}\n\n                break;\n\n\n            case 'DECREAMENT':\n                product = action.cart;\n                if(product.qty > 1){\n\n                    product.qty = product.qty - 1;\n                    updatedPrice = totalPrice - product.price;\n                    updatedQty = qty - product.qty; \n                    index = shoppingCart.findIndex(cart => cart.id === action.id);\n                    shoppingCart[index] = product;\n                    return{shoppingCart: [...shoppingCart], totalPrice: updatedPrice,\n                    qty: updatedQty}\n\n                } else {\n                    return state;\n                }\n            \n\n\n\n\n            default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}