{"ast":null,"code":"var _jsxFileName = \"/home/nusrat-arif/Nusrat Jahan CNC/REACT/React Assignments/React Router v6/shoe-store/src/Components/SnackbarAlert.js\";\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function SnackbarAlert(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.status);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n    props.updateStatus(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 1000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: props.msgType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, props.msg)));\n}","map":{"version":3,"sources":["/home/nusrat-arif/Nusrat Jahan CNC/REACT/React Assignments/React Router v6/shoe-store/src/Components/SnackbarAlert.js"],"names":["React","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","SnackbarAlert","classes","open","setOpen","useState","status","handleClose","event","reason","updateStatus","msgType","msg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEF,iBAAa;AACTC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAFX;AAD+B,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,aAAT,CAAuBP,KAAvB,EAA8B;AACzC,QAAMQ,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAeX,KAAK,CAACY,MAArB,CAAxB;;AAEA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AAEDL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAV,IAAAA,KAAK,CAACgB,YAAN,CAAmB,KAAnB;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAER,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEM,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,IAAxC;AAA8C,IAAA,OAAO,EAAEI,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,QAAQ,EAAEb,KAAK,CAACiB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,KAAK,CAACkB,GADX,CAFJ,CAFJ,CADJ;AAYH","sourcesContent":["import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function SnackbarAlert(props) {\n    const classes = useStyles();    \n    const [open, setOpen] = React.useState(props.status);    \n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n        props.updateStatus(false);\n    };\n\n    return (\n        <div className={classes.root}>\n\n            <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\n                {/* msgType ===> success, error, warning, info */}\n                <Alert onClose={handleClose} severity={props.msgType}>\n                    {props.msg}\n                </Alert>\n\n            </Snackbar>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}